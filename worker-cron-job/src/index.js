const { initDI } = require('./di')
const { name } = require('../package.json')
const config = require('./config')
const models = require('./models')
const repo = require('./repo')
const { connect } = require('./database')
const logger = require('./logger')

const helper = require('./helper')
const listener = require('./listener')
const EventEmitter = require('events').EventEmitter
const mediator = new EventEmitter()
logger.d(`${name} Service`)
mediator.once('di.ready', async container => {
  container.registerValue('config', config)
  container.registerValue('logger', logger)
  container.registerValue('mediator', mediator)
  mediator.once('db.ready', db => {
    logger.d('db.ready, starting server')
    container.registerValue('db', db)
    container.registerValue('helper', helper(container))
    container.registerValue('models', models(container))
    const repository = repo.connect(container)
    container.registerValue('repo', repository)
    listener(container)
  })
  connect(container, mediator)
})
initDI(mediator)
